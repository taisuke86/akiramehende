// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"  // 新しいSupabaseプロジェクト(study-tracker1)
    url      = env("DATABASE_URL")
    directUrl= env("DIRECT_URL")
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    createdBy   User   @relation(fields: [createdById], references: [id])
    createdById String

    @@index([name])
}

// Necessary for Next auth
model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String?  @db.Text
    access_token             String?  @db.Text
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String?  @db.Text
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id                 String          @id @default(cuid())
    email              String?         @unique
    emailVerified      DateTime?
    nickname           String?         // ユーザー設定可能なニックネーム
    // IPA試験関連設定
    targetExam         String?         // 目標試験コード（IP, FE, AP, etc.）
    examDate           DateTime?       // 試験日
    weekdayStudyHours  Float?          // 平日の1日あたり学習時間（時間）
    weekendStudyHours  Float?          // 休日の1日あたり学習時間（時間）
    accounts           Account[]
    sessions           Session[]
    posts              Post[]
    
    // StudySessionとの関連を追加（認証実装時に使用）
    studySessions      StudySession[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model StudySession {
    id        String   @id @default(cuid())
    subject   String   // 勉強した科目/分野
    duration  Int      // 勉強時間（分単位）
    date      DateTime @default(now()) // 勉強した日付
    memo      String?  // メモ・感想（option）
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // 認証機能追加時にユーザと関連付け（一旦nullable）
    userId String?
    user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("study_sessions")
}